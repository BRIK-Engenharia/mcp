% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_pars}
\alias{plot_pars}
\title{Plot mcpfit objects with \code{bayesplot}}
\usage{
plot_pars(
  fit,
  pars = "population",
  regex_pars = character(0),
  type = "combo",
  ncol = 1,
  prior = FALSE
)
}
\arguments{
\item{fit}{An mcpfit object}

\item{pars}{Character vector. One of:
\itemize{
\item Vector of parameter names.
\item \emph{"population" (default):} plots all population parameters.
\item \emph{"varying":} plots all varying effects. To plot a particular varying
effect, use \code{regex_pars = "^name"}.
}}

\item{regex_pars}{Vector of regular expressions. This will typically just be
the beginning of the parameter name(s), i.e., "^cp_" plots all change
points, "^my_varying" plots all levels of a particular varying effect, and
"^cp_|^my_varying" plots both.}

\item{type}{String or vector of strings. Calls \verb{bayesplot::mcmc_>>type<<()}.
Common calls are "combo", "trace", and "dens_overlay". Current options include
'acf', 'acf_bar', 'areas', 'areas_ridges', 'combo', 'dens', 'dens_chains',
'dens_overlay', 'hist', 'intervals', 'rank_hist', 'rank_overlay', 'trace',
'trace_highlight', and 'violin".}

\item{ncol}{Number of columns in plot. This is useful when you have many
parameters and only one plot \code{type}.
\code{ncol} only when \code{type != "segments"}}

\item{prior}{TRUE/FALSE. Plot using prior samples? Useful for \code{mcp(..., sample = "both")}}
}
\value{
A \pkg{ggplot2} object.
}
\description{
Plot many types of plots of parameter estimates. See examples for typical use
cases.
}
\details{
For other \code{type}, it calls \code{bayesplot::mcmc_type()}. Use these
directly on \code{fit$mcmc_post} or \code{fit$mcmc_prior} if you want finer
control of plotting, e.g., \code{bayesplot::mcmc_dens(fit$mcmc_post)}. There
are also a number of useful plots in the \pkg{coda} package, i.e.,
\code{coda::gelman.plot(fit$mcmc_post)} and \code{coda::crosscorr.plot(fit$mcmc_post)}

In any case, if you see a few erratic lines or parameter estimates, this is
a sign that you may want to increase argument 'adapt' and 'iter' in \code{\link{mcp}}.
}
\examples{
\dontrun{
plot_pars(fit)
plot_pars(fit, pars = "varying", ncol = 3)  # plot all varying effects
plot_pars(fit, regex_pars = "my_varying", ncol = 3)  # plot all levels of a particular varying

# More options for parameter estimates
plot_pars(fit, pars = c("var1", "var2", "var3"), regex_pars = "^my_varying")
plot_pars(fit, type = c("areas", "intervals"))

# Some plots only take pairs
plot_pars(fit, pars = c("var1", "var2"))
}
}
\author{
Jonas Kristoffer Lindeløv \email{jonas@lindeloev.dk}

Jonas Kristoffer Lindeløv \email{jonas@lindeloev.dk}
}

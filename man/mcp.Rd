% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcp.R
\name{mcp}
\alias{mcp}
\title{Fit Multiple Linear Segments And Their Change Points}
\usage{
mcp(segments, data, prior = list(), param_x = NULL, sample = TRUE,
  ...)
}
\arguments{
\item{segments}{List of formulas. Break points are estimated in between.
The left-hand side specifies the chainge points and the right-hand side
specifies the linear formula.}

\item{data}{Data.frame or tibble in long format.}

\item{prior}{Named list of parameters and associated priors in JAGS code.
Uninformative default priors are used where priors are not specified.
\code{mct} uses SD for dnorm, dt, dlogis, etc, and converts it into precision
(\code{1/SD^2}) under the hood for JAGS using the \code{sd_to_prec()} function. So
fit$prior show SD but fit$jags_code show precision.}

\item{param_x}{String (default: NULL). Only relevant if no segments contains
slope (no hint at what x is). Set this, e.g., param_x = "time".}

\item{sample}{Boolean (default: TRUE). Set to FALSE if you only want to check
priors, the JAGS model, etc.}

\item{...}{Parameters for \code{jags.parfit} which channels them to \code{jags.fit}.}
}
\value{
An \code{mcpfit} object.
}
\description{
See examples. Change points are forced to be ordered using truncation.
}
\examples{
\dontrun{
# Define the segments that are separated by change points
segments = list(
  score ~ 1 + year,  # intercept + slope
   1 ~ 0 + year,  # joined slope
   1 ~ 0,  # joined plateau
   1 ~ 1  # disjoined plateau
)

# Set priors.
# cp_i are change points.
# int_i are intercepts.
# x_i are slopes.
# i is the segment number (change points are to the right of the segment)
prior = list(
  int_1 = "dunif(10, 30)",  # intercept of segment 1
  cp_2 = "dunif(cp_1, 40),  # change point between segment 1 and 2. Must be greater than cp_1. Order restriction is applied automatically for everything but dunif (a JAGS limitation).
  year_2 = "dnorm(0, 5)  # slope of segment 1. Mean = 0, SD = 5.
)

# Start sampling
fit = mcp(segments, data, prior)

# Visual inspection of the results
plot(fit)
plot(fit, "combo")

# Compare to an one-intercept-only model (no change points) with default prior
segments2 = list(1 ~ 1)
fit2 = mcp(segments2, data)  # fit another model here
fit$loo = loo(fit)
fit2$loo = loo(fit)
loo_compare(fit, fit2)

# Show all priors (not just those specified manually)
fit$prior

# Do stuff with the parameter estimates
fit$pars$model  # check out which parameters are inferred.
library(tidybayes)
spread_draws(fit$samples, cp_1, cp_2, int_1, year_1, year_2) \%>\%
   # tidybayes stuff here

# Show JAGS model
cat(fit$jags_code)
}
}
\keyword{jags,}
\keyword{mcmc,}
\keyword{mct}
